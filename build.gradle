plugins {
    id 'java-library'
    id 'org.springframework.boot' apply(false)
    id 'io.spring.dependency-management'
//    id 'io.spring.javaformat' apply(false)
//    id 'org.asciidoctor.jvm.convert' apply(false)
}

allprojects {
    group = "${projectGroup}"
    version = "${applicationVersion}"
    sourceCompatibility = project.javaVersion

    repositories {
        mavenCentral()
    }
}

subprojects {
    apply plugin: 'java-library'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
//    apply plugin: 'org.asciidoctor.jvm.convert'

    ext {
        snippetsDir = file('build/generated-snippets')
    }

    dependencyManagement {
    }

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.jetbrains:annotations:24.0.0'
        compileOnly 'org.projectlombok:lombok'
        implementation 'com.h2database:h2'
        annotationProcessor 'org.projectlombok:lombok'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        implementation "org.springframework.boot:spring-boot-starter-aop"
        implementation 'org.springframework.boot:spring-boot-starter-validation'

        compileOnly 'com.querydsl:querydsl-apt:5.0.0:jakarta'
        implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
        annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'
        annotationProcessor 'jakarta.persistence:jakarta.persistence-api'


        // https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
        implementation 'org.apache.commons:commons-lang3:3.12.0'

//        asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor:3.0.0'
//        testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc:3.0.0'
    }

    bootJar.enabled = false
    jar.enabled = true

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
        querydsl.extendsFrom compileClasspath
        asciidoctorExt
    }

    repositories {
        mavenCentral()
    }



    def querydslDir = "$buildDir/generated/querydsl"

    sourceSets {
        main.java.srcDir querydslDir
    }

//    jacocoTestReport {
//        dependsOn test
//        reports {
//            xml.required = true
//            html.required = true
//        }
//
//        afterEvaluate {
//            classDirectories.setFrom(files(classDirectories.files.collect {
//                fileTree(dir: it, exclude: [
//                        "com/webtoon/coding/infra/config/*",
//                        "com/webtoon/coding/core/exception/*",
//                        "com/webtoon/coding/WebtoonApplication.class",
//                ])
//            }))
//        }
//    }


    test {
//        finalizedBy jacocoTestReport
        outputs.dir snippetsDir
        useJUnitPlatform {
            excludeTags('develop', 'restdocs')
        }
    }



//    tasks.register('unitTest', Test) {
//        group = 'verification'
//        useJUnitPlatform {
//            excludeTags('develop', 'context', 'restdocs')
//        }
//    }
//
//    tasks.register('contextTest', Test) {
//        group = 'verification'
//        useJUnitPlatform {
//            includeTags('context')
//        }
//    }
//
//    tasks.register('restDocsTest', Test) {
//        group = 'verification'
//        useJUnitPlatform {
//            includeTags('restdocs')
//        }
//    }
//
//    tasks.register('developTest', Test) {
//        group = 'verification'
//        useJUnitPlatform {
//            includeTags('develop')
//        }
//    }

}






