bootJar.enabled = true
jar.enabled = false

ext {
    snippetsDir = file('build/generated-snippets')
}

dependencies {

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.jetbrains:annotations:24.0.0'
    compileOnly 'org.projectlombok:lombok'
    implementation 'com.h2database:h2'
    annotationProcessor 'org.projectlombok:lombok'
    implementation "org.springframework.boot:spring-boot-starter-aop"
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    compileOnly 'com.querydsl:querydsl-apt:5.0.0:jakarta'
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'
    annotationProcessor 'jakarta.persistence:jakarta.persistence-api'


    // https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
    implementation 'org.apache.commons:commons-lang3:3.12.0'

    asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor:3.0.0'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc:3.0.0'

}

def querydslDir = "$buildDir/generated/querydsl"

sourceSets {
    main.java.srcDir querydslDir
}


//test {
//    finalizedBy jacocoTestReport
//    outputs.dir snippetsDir
//}
//
//jacocoTestReport {
//    dependsOn test
//    reports {
//        xml.required = true
//        html.required = true
//    }
//
//    afterEvaluate {
//        classDirectories.setFrom(files(classDirectories.files.collect {
//            fileTree(dir: it, exclude: [
//                    "com/webtoon/coding/infra/config/*",
//                    "com/webtoon/coding/core/exception/*",
//                    "com/webtoon/coding/WebtoonApplication.class",
//            ])
//        }))
//    }
//}
